@model LiftAndShiftApp.Models.Models.ProductModel

@{
    ViewBag.Title = "Add Product";
}



@using (Html.BeginForm("Add","Product", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="page-header">
    <h1><span class="title-border">ProductModel</span></h1>
</div>
    <div class="row">
        
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-12 col-md-6">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group col-12 col-md-6">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group col-12 col-md-6">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label d-block" })
            <div class="btn btn-file pl-0">
                <span class="input-group-btn">
                    <span class="btn btn-primary btn-file">
                        <span class="fa fa-folder-open-o"></span>
                        Browse… <input type="file" name="ImageFile" required>
                    </span>
                </span>
            </div>

        </div>

        <div class="form-group col-12 col-md-6">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
           
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group col-12 text-right">
            <input type="submit" value="Create" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "ViewList", new { area = "" }, new { @class = " ml-2 text-muted" })
        </div>
    </div>

}

@*<div class="col-12 text-right">
    @Html.ActionLink("Back to List", "ViewList", new { area = "" }, new { @class = "text-muted"})
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
